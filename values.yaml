# nameOverride:
# fullNameOverride:

config:
  licenseKey: "EXPIRED-LICENSE-KEY-TRIAL"
  useInsecureCookies: true
  auth:
    google:
      clientId:
      clientSecret:
      domain:
    onelogin:
      customOauth2SsoClientId:
      customOauth2SsoClientSecret:
      customOauth2SsoAuthUrl:
      triggerOauth2SsoLoginAutomatically:
      triggerSamlLoginAutomatically:      
  encryptionKey:
  jwtSecret:
  baseDomain:
  githubAppId:
  githubAppInstallationId:
  githubAppPrivateKey:

  postgresql: {}
    # Specify if postgresql subchart is disabled
    # host:
    # port:
    # db:
    # user:
    # password:

image:
  repository: "tryretool/backend"
  # Will default to Chart AppVersion if left empty
  tag:
  pullPolicy: "IfNotPresent"

commandline:
  args: []

env: {}

# Support for external secrets https://github.com/godaddy/kubernetes-external-secrets
externalSecrets:
  enabled: false
  name: retool-config

files: {}

deployment:
  annotations: {}

service:
  type: ClusterIP
  externalPort: 3000
  internalPort: 3000
  # externalIPs:
  # - 192.168.0.1
  #
  ## LoadBalancer IP if service.type is LoadBalancer
  # loadBalancerIP: 10.2.2.2
  annotations: {}
  labels: {}
  ## Limit load balancer source ips to list of CIDRs (where available)
  # loadBalancerSourceRanges: []
  selector: {}
  # portName: service-port

ingress:
  enabled: false
  # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
  apiVersion: "extensions/v1beta1"
  labels: {}
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # configures the hostname e.g. retool.example.com
  hostName:
  tls:
  # - secretName: retool.example.com
  #   hosts:
  #     - retool.example.com
  # servicePort: service-port

postgresql:
  enabled: true
  ssl_enabled: false
  postgresqlDatabase: hammerhead_production
  postgresqlUsername: retool
  postgresqlPassword: retool
  service:
    port: 5432
  # Use the offical docker image rather than bitnami/docker
  # since Retool depends on the uuid-ossp extension
  image:
    repository: "postgres"
    tag: "10.6"
  postgresqlDataDir: "/data/pgdata"
  persistence:
    enabled: true
    mountPath: "/data/"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # If set and create is false, the service account must be existing
  name:
  annotations: {}

livenessProbe:
  enabled: true
  path: /api/checkHealth
  initialDelaySeconds: 30
  timeoutSeconds: 10

readinessProbe:
  enabled: true
  path: /api/checkHealth
  initialDelaySeconds: 30
  timeoutSeconds: 10
  periodSeconds: 10
  successThreshold: 5

extraContainers: []

extraVolumeMounts: []

extraVolumes: []

resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 500Mi
  # requests:
  #   cpu: 500m
  #   memory: 500Mi

priorityClassName: ""

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# affinity: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

podAnnotations: {}
# Increasing replica count will deploy a separate pod for backend and jobs
# Example: with 3 replicas, you will end up with 3 backends + 1 jobs pod
replicaCount: 1
revisionHistoryLimit: 3

# Custom labels for pod assignment
podLabels: {}

persistentVolumeClaim:
  # set to true to use pvc
  enabled: false
  # set to true to use you own pvc
  existingClaim: false
  annotations: {}

  accessModes:
    - ReadWriteOnce
  size: "15Gi"
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

# default security context
securityContext:
  enabled: false
  allowPrivilegeEscalation: false
  runAsUser: 1000
  fsGroup: 2000

extraConfigMapMounts: []

initContainers: {}