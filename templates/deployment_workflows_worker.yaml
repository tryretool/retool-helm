{{- if .Values.workflows.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "retool.fullname" . }}-workflow-worker
  labels:
    retoolService: {{ template "retool.fullname" . }}-workflow-worker
{{- include "retool.labels" . | nindent 4 }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.workflows.replicaCount }}
  selector:
    matchLabels:
      retoolService: {{ template "retool.fullname" . }}-workflow-worker
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
        prometheus.io/job: {{ template "retool.fullname" . }}-workflow-worker
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.backend.annotations }}
{{ toYaml .Values.backend.annotations | indent 8 }}
{{- end }}
{{- if .Values.workflows.annotations }}
{{ toYaml .Values.workflows.annotations | indent 8 }}
{{- end }}
      labels:
        retoolService: {{ template "retool.fullname" . }}-workflow-worker
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.workflows.labels }}
{{ toYaml .Values.workflows.labels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "retool.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
{{- if .Values.initContainers }}
      initContainers:
{{- range $key, $value := .Values.initContainers }}
      - name: "{{ $key }}"
{{ toYaml $value | indent 8 }}
{{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ required "Please set a value for .Values.image.tag" .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - bash
          - -c
          - chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh -t 0 {{ template "retool.postgresql.host" . }}:{{ template "retool.postgresql.port" . }}; ./docker_scripts/start_api.sh
        {{- if .Values.commandline.args }}
{{ toYaml .Values.commandline.args | indent 10 }}
        {{- end }}
        env:
          - name: NODE_ENV
            value: production
          - name: NODE_OPTIONS
            value: {{(.Values.workflows.config).nodeOptions | default "--max_old_space_size=1024" }}
          - name: SERVICE_TYPE
            value: WORKFLOW_TEMPORAL_WORKER
          - name: DBCONNECTOR_POSTGRES_POOL_MAX_SIZE
            value: "100"
          - name: DBCONNECTOR_QUERY_TIMEOUT_MS
            value: "5400000"
          - name: DISABLE_DATABASE_MIGRATIONS
            value: "true"
          - name: WORKFLOW_TEMPORAL_CLUSTER_FRONTEND_HOST
            value: {{ template "temporal.fullname" (index .Subcharts "retool-temporal-services-helm") }}-frontend
          - name: WORKFLOW_TEMPORAL_CLUSTER_FRONTEND_PORT
            value: "7233"
          - name: WORKFLOW_BACKEND_HOST
            value: http://{{ template "retool.fullname" . }}-workflow-backend
          - name: CODE_EXECUTOR_INGRESS_DOMAIN
            value: http://{{ template "retool.fullname" . }}-code-executor:3004
          - name: CLIENT_ID
            value: {{ default "" .Values.config.auth.google.clientId }}
          - name: COOKIE_INSECURE
            value: {{ .Values.config.useInsecureCookies | quote }}
          - name: RESTRICTED_DOMAIN
            value: {{ default "" .Values.config.auth.google.domain }}
          - name: POSTGRES_HOST
            value: {{ template "retool.postgresql.host" . }}
          - name: POSTGRES_PORT
            value: {{ template "retool.postgresql.port" . }}
          - name: POSTGRES_DB
            value: {{ template "retool.postgresql.db" . }}
          - name: POSTGRES_USER
            value: {{ template "retool.postgresql.user" . }}
          - name: POSTGRES_SSL_ENABLED
            value: {{ template "retool.postgresql.ssl_enabled" . }}
          {{- if and (((.Values.workflows.config).otelCollector).enabled) (((.Values.workflows.config).otelCollector).endpoint) }}
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
             value: {{ ((.Values.workflows.config).otelCollector).endpoint }}
          {{- else if ((.Values.workflows.config).otelCollector).enabled }}
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://$(HOST_IP):4317"
          {{- end }}
          {{- if and (not .Values.externalSecrets.enabled) (not .Values.externalSecrets.externalSecretsOperator.enabled) }}
          - name: LICENSE_KEY
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.licenseKeySecretName }}
                name: {{ .Values.config.licenseKeySecretName }}
                key: {{ .Values.config.licenseKeySecretKey | default "license-key" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: license-key
                {{- end }}
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.jwtSecretSecretName }}
                name: {{ .Values.config.jwtSecretSecretName }}
                key: {{ .Values.config.jwtSecretSecretKey | default "jwt-secret" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: jwt-secret
                {{- end }}
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.encryptionKeySecretName }}
                name: {{ .Values.config.encryptionKeySecretName }}
                key: {{ .Values.config.encryptionKeySecretKey | default "encryption-key" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: encryption-key
                {{- end }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
          {{- if  .Values.postgresql.enabled }}
                name: {{ template "retool.postgresql.fullname" . }}
                key: postgresql-password
          {{- else }}
                {{- if .Values.config.postgresql.passwordSecretName }}
                name: {{ .Values.config.postgresql.passwordSecretName }}
                key: {{ .Values.config.postgresql.passwordSecretKey | default "postgresql-password" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: postgresql-password
                {{- end }}
          {{- end }}
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.auth.google.clientSecretSecretName }}
                name: {{ .Values.config.auth.google.clientSecretSecretName }}
                key: {{ .Values.config.auth.google.clientSecretSecretKey | default "google-client-secret" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: google-client-secret
                {{- end }}
          {{- end }}
          {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          {{- range .Values.environmentSecrets }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretKeyRef.name }}
                key: {{ .secretKeyRef.key }}
          {{- end }}
          {{- with .Values.environmentVariables }}
{{ toYaml . | indent 10 }}
          {{- end }}
        {{- if .Values.externalSecrets.enabled }}
        envFrom:
        - secretRef:
            name: {{ .Values.externalSecrets.name }}
        {{- end }}
        {{- if .Values.externalSecrets.externalSecretsOperator.enabled  }}
        envFrom:
        {{- range .Values.externalSecrets.externalSecretsOperator.secretRef }}
        - secretRef:
            name: {{ .name }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: {{ template "retool.name" . }}
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        {{- range $configFile := (keys .Values.files) }}
        - name: {{ template "retool.name" $ }}
          mountPath: "/usr/share/retool/config/{{ $configFile }}"
          subPath: {{ $configFile }}
        {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
{{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath }}
{{- end }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{- end }}
      volumes:
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
{{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
---
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ template "retool.fullname" . }}
spec:
  {{ toYaml .Values.podDisruptionBudget }}
  selector:
    matchLabels:
  {{- include "retool.selectorLabels" . | nindent 6 }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "retool.fullname" . }}-workflow-worker
spec:
  selector:
    retoolService: {{ template "retool.fullname" . }}-workflow-worker
  ports:
  - protocol: TCP
    port: {{ .Values.service.externalPort }}
    targetPort: {{ .Values.service.internalPort }}
    name: {{ template "retool.name" . }}
  - protocol: TCP
    port: 9090
    targetPort: metrics
    name: metrics
{{- end }}
