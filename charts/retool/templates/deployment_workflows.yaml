{{- if include "retool.workflows.enabled" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "retool.workflowBackend.name" . }}
  labels:
    {{- include "retool.workflowBackend.selectorLabels" . | nindent 4 }}
    {{- include "retool.workflowBackend.labels" . | nindent 4 }}
    {{- include "retool.labels" . | nindent 4 }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ (.Values.workflows.backend).replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "retool.workflowBackend.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.backend.annotations }}
{{ toYaml .Values.backend.annotations | indent 8 }}
{{- end }}
      labels:
        {{- include "retool.workflowBackend.selectorLabels" . | nindent 8 }}
        {{- include "retool.workflowBackend.labels" . | nindent 8 }}
        {{- include "retool.labels" . | nindent 8 }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.workflows.labels }}
{{ toYaml .Values.workflows.labels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "retool.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
{{- if .Values.initContainers }}
      initContainers:
{{- range $key, $value := .Values.initContainers }}
      - name: "{{ $key }}"
{{ toYaml $value | indent 8 }}
{{- end }}
{{- end }}
      containers:
      - name: workflow-backend
        image: "{{ .Values.image.repository }}:{{ required "Please set a value for .Values.image.tag" .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - bash
          - -c
          - chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh -t 0 {{ template "retool.postgresql.host" . }}:{{ template "retool.postgresql.port" . }}; ./docker_scripts/start_api.sh
        {{- if .Values.commandline.args }}
{{ toYaml .Values.commandline.args | indent 10 }}
        {{- end }}
        env:
          - name: DEPLOYMENT_TEMPLATE_TYPE
            value: {{ template "retool.deploymentTemplateType" . }}
          - name: DEPLOYMENT_TEMPLATE_VERSION
            value: {{ template "retool.deploymentTemplateVersion" . }}
          - name: NODE_ENV
            value: production
          {{ if $.Values.dbconnector.java.enabled }}
          - name: SERVICE_TYPE
            value: WORKFLOW_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR,JAVA_DBCONNECTOR
          {{ else }}
          - name: SERVICE_TYPE
            value: WORKFLOW_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
          {{ end }}
          - name: DBCONNECTOR_POSTGRES_POOL_MAX_SIZE
            value: "100"
          - name: DBCONNECTOR_QUERY_TIMEOUT_MS
          {{- if .Values.workflows.dbConnectorTimeout }}
            value: {{ .Values.workflows.dbConnectorTimeout | quote}}
          {{- else if .Values.config.dbConnectorTimeout }}
            value: {{ .Values.config.dbConnectorTimeout | quote}}
          {{- else }}
            value: "5400000"
          {{- end }}
          - name: DISABLE_DATABASE_MIGRATIONS
            value: "true"
          {{- if or (index .Values "retool-temporal-services-helm" "enabled") (.Values.workflows.temporal.enabled) }}
          - name: WORKFLOW_TEMPORAL_CLUSTER_FRONTEND_HOST
            value: {{ template "retool.temporal.host" . }}
          - name: WORKFLOW_TEMPORAL_CLUSTER_FRONTEND_PORT
            value: {{ template "retool.temporal.port" . }}
          - name: WORKFLOW_TEMPORAL_CLUSTER_NAMESPACE
            value: {{ template "retool.temporal.namespace" . }}
          {{- end }}
          {{- if (.Values.workflows.temporal).sslEnabled }}
          - name: WORKFLOW_TEMPORAL_TLS_ENABLED
            value: "true"
          {{- if (and (.Values.workflows.temporal).sslCert (.Values.workflows.temporal).sslKey) }}
          - name: WORKFLOW_TEMPORAL_TLS_CRT
            value: {{ .Values.workflows.temporal.sslCert }}
          - name: WORKFLOW_TEMPORAL_TLS_KEY
            valueFrom:
              secretKeyRef:
              {{- if (.Values.workflows.temporal).sslKeySecretName }}
                name: {{ .Values.workflows.temporal.sslKeySecretName }}
                key: {{ .Values.workflows.temporal.sslKeySecretKey | default "temporal-tls-key" }}
              {{- else }}
                name: {{ template "retool.fullname" . }}
                key: "temporal-tls-key"
              {{- end }}
          {{- end }}
          {{- end }}

          {{- include "retool.telemetry.includeEnvVars" . | nindent 10 }}

          - name: CLIENT_ID
            value: {{ default "" .Values.config.auth.google.clientId }}
          - name: COOKIE_INSECURE
            value: {{ .Values.config.useInsecureCookies | quote }}
          - name: POSTGRES_HOST
            value: {{ template "retool.postgresql.host" . }}
          - name: POSTGRES_PORT
            value: {{ template "retool.postgresql.port" . }}
          - name: POSTGRES_DB
            value: {{ template "retool.postgresql.database" . }}
          - name: POSTGRES_USER
            value: {{ template "retool.postgresql.user" . }}
          - name: POSTGRES_SSL_ENABLED
            value: {{ template "retool.postgresql.ssl_enabled" . }}
          - name: WORKFLOW_BACKEND_HOST
            value: http://{{ include "retool.workflowBackend.name" . }}
          {{- if .Values.codeExecutor.enabled }}
          - name: CODE_EXECUTOR_INGRESS_DOMAIN
            value: http://{{ template "retool.codeExecutor.name" . }}
          {{- end }}
          {{- if and (not .Values.externalSecrets.enabled) (not .Values.externalSecrets.externalSecretsOperator.enabled) }}
          - name: LICENSE_KEY
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.licenseKeySecretName }}
                name: {{ .Values.config.licenseKeySecretName }}
                key: {{ .Values.config.licenseKeySecretKey | default "license-key" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: license-key
                {{- end }}
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.jwtSecretSecretName }}
                name: {{ .Values.config.jwtSecretSecretName }}
                key: {{ .Values.config.jwtSecretSecretKey | default "jwt-secret" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: jwt-secret
                {{- end }}
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.encryptionKeySecretName }}
                name: {{ .Values.config.encryptionKeySecretName }}
                key: {{ .Values.config.encryptionKeySecretKey | default "encryption-key" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: encryption-key
                {{- end }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
          {{- if  .Values.postgresql.enabled }}
                name: {{ template "retool.postgresql.fullname" . }}
                key: postgres-password
          {{- else }}
                {{- if .Values.config.postgresql.passwordSecretName }}
                name: {{ .Values.config.postgresql.passwordSecretName }}
                key: {{ .Values.config.postgresql.passwordSecretKey | default "postgresql-password" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: postgresql-password
                {{- end }}
          {{- end }}
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                {{- if .Values.config.auth.google.clientSecretSecretName }}
                name: {{ .Values.config.auth.google.clientSecretSecretName }}
                key: {{ .Values.config.auth.google.clientSecretSecretKey | default "google-client-secret" }}
                {{- else }}
                name: {{ template "retool.fullname" . }}
                key: google-client-secret
                {{- end }}
          {{- end }}
          {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          {{- range .Values.environmentSecrets }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretKeyRef.name }}
                key: {{ .secretKeyRef.key }}
          {{- end }}
          {{- with .Values.environmentVariables }}
{{ toYaml . | indent 10 }}
          {{- end }}
        {{- if .Values.externalSecrets.enabled }}
        envFrom:
        - secretRef:
            name: {{ .Values.externalSecrets.name }}
        {{- range .Values.externalSecrets.secrets }}
        - secretRef:
            name: {{ .name }}
        {{- end }}
        {{- end }}
        {{- if .Values.externalSecrets.externalSecretsOperator.enabled  }}
        envFrom:
        {{- range .Values.externalSecrets.externalSecretsOperator.secretRef }}
        - secretRef:
            name: {{ .name }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: http-server
          protocol: TCP
{{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold:  {{ .Values.livenessProbe.failureThreshold }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        {{- range $configFile := (keys .Values.files) }}
        - name: {{ template "retool.name" $ }}
          mountPath: "/usr/share/retool/config/{{ $configFile }}"
          subPath: {{ $configFile }}
        {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
{{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath }}
{{- end }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{- end }}
      volumes:
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
{{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
---
{{- if .Values.podDisruptionBudget }}
{{- if semverCompare ">=1.21-0" .Capabilities.KubeVersion.Version -}}
apiVersion: policy/v1
{{- else -}}
apiVersion: policy/v1beta1
{{- end }}
kind: PodDisruptionBudget
metadata:
  name: {{ include "retool.workflowBackend.name" . }}
spec:
  {{ toYaml .Values.podDisruptionBudget }}
  selector:
    matchLabels:
      {{- include "retool.workflowBackend.selectorLabels" . | nindent 6 }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "retool.workflowBackend.name" . }}
spec:
  selector:
    {{- include "retool.workflowBackend.selectorLabels" . | nindent 4 }}
  ports:
  - protocol: TCP
    port: 80
    targetPort: {{ .Values.service.internalPort }}
    name: http-server
{{- end }}
