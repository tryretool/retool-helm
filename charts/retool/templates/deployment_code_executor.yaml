{{- if include "retool.codeExecutor.enabled" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "retool.codeExecutor.name" . }}
  labels:
    {{- include "retool.codeExecutor.selectorLabels" . | nindent 4 }}
    {{- include "retool.codeExecutor.labels" . | nindent 4 }}
    {{- include "retool.labels" . | nindent 4 }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.codeExecutor.replicaCount }}
  selector:
    matchLabels:
      {{- include "retool.codeExecutor.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.codeExecutor.annotations }}
{{ toYaml .Values.codeExecutor.annotations | indent 8 }}
{{- end }}
      labels:
        {{- include "retool.codeExecutor.selectorLabels" . | nindent 8 }}
        {{- include "retool.codeExecutor.labels" . | nindent 8 }}
        {{- include "retool.labels" . | nindent 8 }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.codeExecutor.labels }}
{{ toYaml .Values.codeExecutor.labels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "retool.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
{{- if .Values.initContainers }}
      initContainers:
{{- range $key, $value := .Values.initContainers }}
      - name: "{{ $key }}"
{{ toYaml $value | indent 8 }}
{{- end }}
{{- end }}
      containers:
      - name: code-executor
        image: "{{ .Values.codeExecutor.image.repository }}:{{ include "retool.codeExecutor.image.tag" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{ if .Values.codeExecutor.securityContext }}
{{ toYaml .Values.codeExecutor.securityContext | indent 10 }}
          {{ else }}
          privileged: true
          {{ end }}
        env:
          - name: DEPLOYMENT_TEMPLATE_TYPE
            value: {{ template "retool.deploymentTemplateType" . }}
          - name: DEPLOYMENT_TEMPLATE_VERSION
            value: {{ template "retool.deploymentTemplateVersion" . }}
          - name: NODE_ENV
            value: production
          - name: NODE_OPTIONS
            value: {{(.Values.codeExecutor.config).nodeOptions | default "--max_old_space_size=1024" }}

          {{- include "retool.telemetry.includeEnvVars" . | nindent 10 }}

          {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          {{- range .Values.environmentSecrets }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretKeyRef.name }}
                key: {{ .secretKeyRef.key }}
          {{- end }}
          {{- with .Values.environmentVariables }}
{{ toYaml . | indent 10 }}
          {{- end }}
        ports:
        - containerPort: 3004
          name: http-server
          protocol: TCP
{{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: 3004
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold:  {{ .Values.livenessProbe.failureThreshold }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: 3004
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
{{- end }}
        resources:
{{ toYaml .Values.codeExecutor.resources | indent 10 }}
        volumeMounts:
{{- if .Values.codeExecutor.volumeMounts }}
{{ toYaml .Values.codeExecutor.volumeMounts | indent 10 }}
{{- end }}
      volumes:
{{- if .Values.codeExecutor.volumes }}
{{ toYaml .Values.codeExecutor.volumes | indent 8 }}
{{- end }}
{{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
{{- end }}
{{- if .Values.codeExecutor.affinity }}
      affinity:
{{ toYaml .Values.codeExecutor.affinity | indent 8 }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "retool.codeExecutor.name" . }}
spec:
  selector:
    {{- include "retool.codeExecutor.selectorLabels" . | nindent 4 }}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3004
    name: http-server
{{- end }}
